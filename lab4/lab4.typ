#import "@docs/bmstu:1.0.0":*
#import "@preview/tablex:0.0.8": tablex, rowspanx, colspanx, cellx
#show: student_work.with(
  caf_name: "Компьютерные системы и сети",
  faculty_name: "Информатика и системы управления",
  work_type: "лабораторной работе",
  work_num: "4",
  discipline_name: "Схемотехника",
  theme: "Синхронные одноступенчатые триггеры со статическим",
  themecol2: "и динамическим управлением записью",
  author: (group: "ИУ6-42Б", nwa: "А. П. Плютто"),
  adviser: (nwa: "В. Д. Шульман"),
  city: "Москва",
  table_of_contents: true,
)
#let xb = $op("x", limits: #true)^"__"$
#let ab = $op("a", limits: #true)^"__"$
#let bb = $op("b", limits: #true)^"__"$
#let Rb = $op("R", limits: #true)^"___"$
#let Sb = $op("S", limits: #true)^"___"$
#let Qb = $op("Q", limits: #true)^"___"$
#let Cb = $op("C", limits: #true)^"___"$
#let nt(a,b) = $op((#a), limits: #true)^#b$

= Цель и задание
== Цель
Изучить схемы ассинхронного RS-триггера, который является запоминающей ячейкой памяти всех типов триггеров. Синхронных RS- и D-триггеров со статическим управлением записью и DV-триггера с динамическим управлением записью.

== Задание
+ Исследовать работу асинхронного RS-триггера с инверсными входами в статическом режиме
+ Исследовать работу синхронного RS-триггера в статическом режиме

= Исследовать работу асинхронного RS-триггера с инверсными входами в статическом режиме

== Таблица переходов

#align(center)[
#tablex(
columns: 4,
inset: 10pt,
align: center + horizon,
$ Rb $,$ Sb $,$Q_t$,$Q_"t+1"$,
$0$,$0$,$0$,$✘$,
$0$,$0$,$1$,$✘$,
$0$,$1$,$0$,$0$,
$0$,$1$,$1$,$0$,
$1$,$0$,$0$,$1$,
$1$,$0$,$1$,$1$,
$1$,$1$,$0$,$0$,
$1$,$1$,$1$,$1$,
)]

Как видно по таблице, чтобы удерживать текущее состояние необходимо просто подавать 0 в R и S. Сигнал будет меняться, если подать логическую единицу на один из этих входов, но не на оба сразу. Если подаем 1 на R то текущее значение становится 0, если на S -- 1.

== Функция переходов

$ Q_"t+1" = Qb_t Rb S or Q_t Rb S or Q_t Rb Sb $

== Схема

== Практические и теоретические задержки

= Исследовать работу синхронного RS-триггера в статическом режиме

== Таблица переходов

#align(center)[
#tablex(
columns: 5,
inset: 10pt,
align: center + horizon,
$C$, $R$, $S$, $Q_t$, $Q_"t+1"$,
$0$, $0$, $0$, $0$, $0$,
$0$, $0$, $0$, $1$, $1$,
$0$, $0$, $1$, $0$, $0$,
$0$, $0$, $1$, $1$, $1$,
$0$, $1$, $0$, $0$, $0$,
$0$, $1$, $0$, $1$, $1$,
$0$, $1$, $1$, $0$, $0$,
$0$, $1$, $1$, $1$, $1$,
$1$, $0$, $0$, $0$, $0$,
$1$, $0$, $0$, $1$, $1$,
$1$, $0$, $1$, $0$, $1$,
$1$, $0$, $1$, $1$, $1$,
$1$, $1$, $0$, $0$, $0$,
$1$, $1$, $0$, $1$, $0$,
$1$, $1$, $1$, $0$, $✘$,
$1$, $1$, $1$, $1$, $✘$,
)]

Как видно из таблицы, в данном случае ситуация схожа с заданием 1, но появляется синхронизирующий бит, если его значение равно 0, то при любых R и S триггер не изменит своего состояния.

== Функция переходов

$ Q_"t+1" = Cb Q_t or C(Qb_t Rb S or Q_t Rb S or Q_t Rb Sb) $

== Схема

== Практические и теоретические задержки


= 














